* 1.ネットワーク基礎知識
** 1.1 コンピュータネットワーク登場の背景
*** 1.1.2 スタンドアロンからネットワーク利用へ
    コンピュータは単体(スタンドアロン)で使われていた、サーバーというものがない時代
    そこから、複数のコンピュータを接続したコンピュータ・ネットワークが誕生した
** 1.2 コンピュータとネットワーク発展の7つの段階
*** 1.2.1 バッチ処理
    多くの人にコンピュータが利用されるには、バッチ処理形式のコンピュータが必要だった
    コンピュータを扱う専門のオペレータに依頼するフローだった
    バッチ処理形式のコンピュータは使い勝手がいいものではなく、誰もが手軽に扱えるものではなかった
*** 1.2.2 タイムシェアリングシステム(TSS)
    TSSは、バッチ処理形式の次に登場したもの
    TSSで、コンピュータとインタラクティブ（対話的）な操作が可能になった
    コンピュータと対話的にプログラミングできるのがBASIC
    バッチ形式だった時代はCOBOL、FORTRAN
    BASICはTSSを意識した初心者向けの言語で、より多くの人にプログラミングを学習してもらうために開発された
*** 1.2.3 コンピュータ通信
    TSSでコンピュータと端末がつながっているだけでコンピュータ同士が接続されたわけではない
    1970年代になるとコンピュータの性能が飛躍的に向上して、価格も安くなり一般企業もコンピュータを導入するようになった
    コンピュータ間通信が可能になると、ハードウェアの記憶媒体にデータを保管せずともデータのやり取りが簡単になり、手間も少なくなった
*** 1.2.4 コンピュータネットワークの登場
    - 1970年代の初期にはパケット交換技術によるコンピュータネットワークの実験が開始され、異なるメーカーのコンピュータ同士でも相互通信を可能にする技術が研究されるようになった
    - 1980年代にはそれが実現したコンピュータネットワークが誕生
*** 1.2.5 インターネットの普及
    1990年代になると一人一台のコンピュータを持つようになり、ダウンサイジング、マルチベンダ接続（異機種間接続）という言葉が流行した
    マルチベンダ接続のために使われたのがインターネットの通信技術だった
**** ダウンサイジング
     1990年代前半パソコンやUNIXワークステーションの性能はそれまでのメインフレームワーク(機関情報システムなどに使用される大型コンピュータを指す)と変わらないくらいの能力を持つようになった
     大型のメインフレームで構築したシステムへ置き換える動きが活発化した、このような動きをダウンサイジングという ***  1.2.6 インターネット技術中心の時代へ
     インターネットの普及と発展が通信のあらゆる分野に影響を与えた
     インターネットは別々に発展してきた多くの技術をすべてインターネットに取り込む方向に進んでいく
     汎用の通信基盤として電話網の代わりに *インターネットの技術でもあるIP網* が利用され、その上で電話やテレビ放送、コンピュータ通信、インターネットが構築されている
     ネットワークにつながる機器も、いわゆる「コンピュータ」だけではなく携帯端末や家電製品、ゲーム機などに広がった
     インターネットとの接続を前提としない制御システムの分野でもIPが使われている(たとえば火力発電所のボイラー制御)
*** 1.2.8 人からモノへ、モノからコトへ
    コンピュータネットワークの目的は「生産性の向上」であるといえる
    しかし、今ではその目的が少しずつ変わってきている
    今後はインターネットの利活用が更に進み、色々なモノへ接続され、そこから得られた情報をもとに新たなコトを創造する仕組みが増えていく
    インターネットは第4次産業革命ともいわれている
*** 1.2.9 すべての鍵を握るTCP/IP
    TCP/IPとは通信プロトコルの総称
    「プロトコル」についてきちんと理解しよう！
** 1.3 プロトコルとは
*** 1.3.1 プロトコルがいっぱい
    さまざまなプロトコルを体系的にまとめたものを「ネットワークアーキテクチャ」ということがある
*** 1.3.5 パケット交換でのプロトコル
    パケットは辞書で調べると「小包」、まさに大きなデータを小包に小分けして相手に届けている
    自分のアドレスや宛先のアドレス、データの番号などが書かれている部分をパケットのヘッダという
    大きなデータをパケットに分けて通信したとき、元データのどの部分なのかを示す番号がついている
    その番号を元に受け取り側はパケットのデータを元データに組み上げることができる
** 1.4 プロトコルは誰が決める？
*** 1.4.1 コンピュータ通信の登場から標準化へ
    1974年にIBMがコンピュータ通信技術を体系化したネットワークアーキテクチャ、SNAを発表
    その後、各コンピュータメーカーはそれぞれの独自ネットワークアーキテクチャを発表し、プロトコル群の体系化を図った
    そうすると各ネットワークアーキテクチャは互換性がないので、通信するためには同じメーカーのコンピュータを揃えないといけないかつずっとそのメーカのコンピュータを買い続けないといけない
    そこでネットワークのオープン化、マルチベンダ化である
    異なるメーカーのコンピュータでも自由に通信できる環境が強く望まれた
*** 1.4.2 プロトコルの標準化
    このような問題を解決するためにISO（国際標準化機構）は国際基準としてOSI(開放型システム間相互接続)と呼ばれる通信体系を標準化した
    現在OSIの定めるプロトコルは普及していないが、OSIプロトコルを設計する際の指針として提唱されたOSI参照モデルはネットワークプロトコルを考えるときによく引き合いに出される
    本書のTCP/IPはISOの国際標準ではない、TCP/IPはIETF（Internal Engineering Task Force）で提案や標準化作業が行われているプロトコルである
    大学などの研究機関やコンピュータ業界が中心となって標準化が推進され、発展してきた
    TCP/IPはインターネット上の標準であり、デファクトスタンダードとして世界中で最も広く使われている通信プロトコル
    インターネットで利用される機器やソフトウェアは、IETFによって標準化されたTCP/IPに準拠している
    標準化によってコンピュータネットワークは便利なものになった
** 1.5 プロトコルの階層化とOSI参照モデル
*** 1.5.1 プロトコルの階層化
    通信プロトコルを設計するさいに、OSI参照モデル(通信に必要な機能を7つの階層に分けることで、単純化するためのモデル)を提唱した
    各階層は上の層と下位層の間でサービスのやりとりをする約束事を *インターフェース* とよび、通信相手の同じ階層とやりとりするをするときの約束事を *プロトコル* とした
    この階層化は開発のモジュール化（ある機能を実行するかたまりをモジュールと呼び、それを開発時の部品として利用する）
*** 1.5.3 OSI参照モデル
    OSI参照モデルはあくまでも *モデル* であり、プロトコルやインターフェースの詳細を決めているわけではない、プロトコルの設計や勉強をするときのガイドライン
*** 1.5.4 OSI参照モデルの各層の役割
    ~ アプリケーション層
      アプリケーションの中の通信に関する部分を定めている
    ~ プレゼンテーション層
      上位層・下位層それぞれに通信に適したデータフォーマットに変換することに責任を持つ
      具体的には機器固有のデータフォーマットなどをネットワーク共通のフォーマットに変換する役割
      機器の違いによる整合性をとる
    ~ セッション層
      コネクション（データの流れる論理経路）の確立や切断、転送するデータの切れ目の設定やなどデータ転送の管理
    ~ トランスポート層
      宛先のアプリケーションにデータを確実に届ける役割
      通信を行う両端のノードだけで処理され、途中のルーターでは処理されない
    ~ ネットワーク層
      宛先までデータを届ける役割
      宛先はネットワークが複数のルーターでつながった遠い場所の可能性もあるので、アドレスの体系決め、どの経路使うかの判断をしている
    ~ データリンク層
      物理層で直接接続されたノード間（例えば１つのイーサネットに接続された２つのコンピュータ）での通信を可能にする
    ~ 物理層
      ビット列のデータを電圧の高低や光の明滅に変換したり、その逆もする
** 1.6 OSI参照モデルによる通信処理の例
   *ホスト*
   本書ではネットワークに接続されたコンピュータと言う意味で使っている
   (OSIではノードという)
*** 1.6.2 セッション層以上での処理
    プレゼンテーション層はネットワーク共通のフォーマットに変換している層なので、受け取ったメッセージが文字化けしているとプレゼンテーション層の設定がうまくいっていないことになる
    ネットワーク層もデータリンク層もデータを送るプロトコルだが、ネットワーク層はゴールの宛先まで届ける役割をもっていてデータリンク層は1区間のデータを転送する
** 1.8 アドレスとは
*** 1.8.2 アドレスの階層性
    MACアドレスの場合、参照するアドレス対応表を *フォワーディングテーブル*
    IPアドレスの場合、*ルーティングテーブル* をみて、次のデータの転送先を判断している
** 1.9 ネットワークの構成要素
   - *ネットワークインターフェース*
     コンピュータをネットワークに接続するための装置
   - *リピーター*
     ネットワークを物理層で延長する
   - *ブリッジ/レイヤ２スイッチ*
     ネットワークをデータリンク層で延長する
   - *ルーター /レイヤ３スイッチ*
     ネットワーク層によってパケットを転送する
   - *レイヤ4-7スイッチ*
     トランスポート層より上の層でトラフィックを処理する
   - *ゲートウェイ*
     プロトコルの変換をする
*** 1.9.4 ブリッジ/レイヤ２スイッチ
    - *フレーム*
      パケットとほぼ同じ意味。データリンクではフレームと表現する
    - *セグメント*
      分割、区分といったネットワークを指して使われる
      またTCPでのデータを表す意味にも使われる
    - *トラフィック*
      ネットワーク上を流れるパケットやパケットの量を表す
      ブリッジの機能を持ったハブを *スイッチ(ングハブ)* と呼ぶ
*** 1.9.5 ルーター/レイヤ３スイッチ
    ルーターはネットワークとネットワークを接続して、パケットを中継する機器
    異なるデータリンク同士を接続することができる
    家のネット環境を構築するために置いてある小箱は *ブロードバンドルーター* や *CPE* というルーターの一種

* 2.TCP/IP 基礎知識
** TCP/IP 登場の背景とその歴史
   なぜネットワークの基盤にTCP/IPが起用されるようになったのか？
*** 2.1.1 軍事技術の応用から
    DoD(アメリカ国防省)が中心となり進められた研究開発があり、それが *パケット通信*
    なぜなら、軍事的な視点で分散型のネットワークであれば、一つの拠点が攻撃されても迂回路がある限りは通信が可能であるから
    さらに、パケット通信であれば複数のユーザが一つの回線を利用する形が取れるので、回線コストを下げられる
*** 2.1.2 ARPANETの誕生
    1969年、当初のネットワークはアメリカ西海岸の大学と研究機関のうちの４つのノードを結んだものだった
    このネットワークはDoDが中心となって開発が行われたことや、技術が飛躍的に進歩していったことにより、一般のユーザーも取り込んで当時としては非常に大規模なネットワークに発達していった
    これを *ARPANET* (Advanced Research Projects Agency Network: アーパネットと発音)といい、インターネットの起源と言われている
    これがわずか３年で４つのノードから３４のノードを接続する形に発展し、この実験は大成功し、パケットによるデータ通信手法が実用的だということが証明された
*** 2.1.3 TCP/IPの誕生
    そして、1970年代前半にTCP/IPが開発され、1982年までかかってTCP/IPの仕様が決定され、翌年にはARPANETでつかう唯一のプロトコルになった
*** 2.1.4 UNIXの普及とインターネットの拡大
    ARPANETがTCP/IPの要だったのは事実だが、世界的に広く普及した理由はそこじゃなかった
    1980年前後の大学や研究所でコンピュータのOSとしてBSD UNIXが広く利用されていて、その内部にTCP/IPが実装されたことだった
** 2.2 TCP/IPの標準化
   なぜOSIではなく、TCP/IPが標準化されたのか
*** 2.2.1 TCP/IPという語は何を指す？
    実際にTCP/IPはインターネットプロトコルスイートと呼ばれ、インターネットを構築するうえで必要なプロトコルのセットという意味である
*** 2.2.2 TCP/IP標準化の精神
    ~ 議論の場がオープンである
    ~ プロトコルの仕様を決めることを重視するのではなく、互いに通信できる技術を追い求めてきたということ
*** 2.2.3 TCP/IPの仕様書 RFC
    標準化しようとするプロトコルは、RFC(Request For Comments)のドキュメントになる
** 2.3 インターネットの基礎知識
*** 2.3.3 インターネットの構造
    巨大なネットワークは階層的になっていて、小さなネットワーク同士が接続されることで大きなネットワークを形成している
    ネットワーク同士は *NOC* で接続される
    ネットワークの運用者や利用方針が違うネットワークを対等に接続するポイントは *IX* と呼ばれる
** 2.4 TCP/IPの階層モデル
   - アプリケーション層 (OSI参照モデルでいうと4-7レイヤ)
   - トランスポート層 (OSI参照モデルでいうとトランスポート層)
   - インターネット層（OSI参照モデルでいうとネットワーク層）
   - ネットワークインターフェース層（OSI参照モデルでいうとデータリンク層）
   - (ハードウェア) (OSI参照モデルでいうと物理層)
   OSI参照モデルとTCP/IPの階層モデルがちがう理由はOSI参照モデルは「通信プロトコルに必要な機能はなにか」を中心に考えてモデル化されているのに対し、
   TCP/IPの階層モデルは「プロトコルをコンピュータに実装するにはどのようにプログラミングしたらよいか」を中心に考えてモデル化されているため
*** 2.4.2 ハードウェア（物理層）
    TCP/IPはネットワークで接続された装置間(イーサネットだろうが無線だろうが通信媒体が何であるか気にしない)で通信できることを前提にして作られているプロトコル
*** 2.4.3 ネットワークインターフェース層（データリンク層）
    ネットワークインターフェース層は、イーサネットなどのデータリンクを利用して通信をするためのインターフェースとなる階層
    つまりNICを動かすための *デバイスドライバ* と考えていい デバイスドライバはOSとハードウェアの橋渡しをするソフトウェアである
*** 2.4.4 インターネット層（ネットワーク層）
    インターネット層では、IPが使われている
    IPはIPアドレスをもとにしてパケットを転送する
**** IP (Internet Protocol)
     IPはパケット交換プロトコルだが、パケットが相手に到達しているかどうかは気にしないし再送もしない
**** ICMP (Internet Control Message Protocol)
     IPパケットの配送中に何らかの異常があってパケットを転送できなかったとき、パケットの送信元に以上を知らせるために使われるプロトコル
     ネットワークの診断などにも使われる
**** ARP(Address Resolution Protocol)
     パケットの送り先の物理的なアドレス（MACアドレス）をIPアドレスから取得するプロトコル
*** 2.4.5 トランスポート層
    トランスポート層のもっとも重要な役割はアプリケーションプログラム間の通信を実現すること
    どのプログラムとどのプログラムが通信しているのか識別するために *ポート番号* が使われている
*** 2.4.6 アプリケーション層
    TCP/IP階層モデルではセッション層、プレゼンテーション層、アプリケーション層はすべてアプリケーションプログラムの中で実現されると考えられている
**** Webアクセス(www)
     wwwではHTTPがOSI参照モデルのアプリケーション層のプロトコル、HTMLがプレゼンテーション層はえのプロトコルといえる
**** 電子メール（E-Mail）
     電子メールでよく使われるE-Mailは、electonic mailの略
     当時、インターネットの電子メールでは、テキスト形式でしかメッセージを送信できなかった
     現在は電子メールで送信できるデータフォーマットを拡張するMIMEの仕組みが一般的になり、映像や音声のファイルなどさまざまな情報を送ることができる
     このMIMEははOSI参照モデルの第６層、プレゼンテーション層の機能ということができる
**** 遠隔ログイン（TELNETとSSH）
     TCP/IPにおける遠隔ログインでは、TELNETプロトコルやSSHプロトコルがよく用いられている
     また、BSD UNIX系のrloginなどのrコマンド系のプロトコルも利用される
     X Window Systemで利用されるXプロトコルは、遠隔のグラフィック端末を実現するプロトコル
     rlogin: RFC1283
     Xプロトコル: RFC1198
     同様にRemote Desktopもあるが、この場合はRDPが使われていて、それはRFCで規定されているものではない
**** ネットワーク管理（SNMP）
     TCP/IPではネットワーク管理のプロトコルでSNMPが使われている
     SNMPでは管理されているルーター、ブリッジホストなどは *エージェント* と呼ばれ、管理しているプログラムを *マネージャ* という
     SNMPはエージェントとマネージャの通信プロトコル
     SNMPのエージェントはネットワークインターフェースの情報や通信パケットの量、異常なパケットの量、機器の温度の情報などが格納されている
     その情報にはMIB（Management Information Base）という決められた構造によってアクセスできる
     SNMPや各種の動作ログを活用してネットワークの混雑具合の調査や障害の知見、将来のネットワーク拡張のための情報収集などに役立てられる
** 2.5 TCP/IPの階層モデルと通信例
*** 2.5.1 パケットヘッダ
**** パケット、フレーム、データグラム、セグメント、メッセージ
     - パケットは何にでも使える用語
     - フレームはデータリンクのパケットを表す
     - データグラムはIPやUDPなどネットワーク層以上でパケット単位のデータ構造を持つプロトコルで使用される
     - セグメントはストリームベースのTCPに含まれるデータを表すときに使用される
     - メッセージはアプリケーションプロトコルのデータ単位を表すときに使われる(これがSQSがメッセージとよんでいる所以？)
**** ヘッダーはプロトコルの顔
     ネットワークを流れる（流れるって表現いいな）パケットはプロトコルが利用する *ヘッダ* と、そのプロトコルの上位層が利用する *データ* から構成されている
     ヘッダの皇族は細かい部分まで明確に仕様が決められいてる
     たとえば、上位プロトコルを識別するフィールドはどこに位置し、何ビットのフィールドを持っているかとか、チェックサムはどのような方法で計算してどこのフィールドにいれるかなどが、きちんと決められている
     通信する双方のコンピュータで *プロトコルの識別番号やチェックサムの計算方法が違えば、まったく通信できなくなってしまう*
     このように、パケットのヘッダにはそのプロトコルがどのように情報をやり取りするべきかが明確に表されている
     逆に言えば、ヘッダを見ればその *プロトコルが 必要としている情報や処理内容が見えてくる*

