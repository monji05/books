本書のテーマは**基幹系システム**の設計と**データモデリング**である。

* 1. 基幹系システムとデータモデリング

** 1.1 基幹系システムと帳簿はなぜ存在するか
    - **SoE(System of Engagement):** 顧客（やサプライヤー）との関係を構築するためのシステム
    - **SoR(System of Record): 記録のシステム**
    - 本書では基幹システム＝SoRにあたるもの。
    - データベースは単にドメインモデリングによって抽出されたオブジェクトが「永続化」されるストレージにすぎない。
    - 基幹系システムとは、 **企業の活動を指示・制御すること** を目的とする情報処理システムである。
    - 1つのイベント(例えば商品の購入)をトリガーにしていろいろな活動を指示、完了を記録して、処理漏れや二重処理が無いことを確認できるようにすることが、基幹系システムの基本的な役割である。
-------  基幹系システムの中核には、「帳簿」がある。
      - 帳簿とは、ビジネスの活動を回すために用いられる、構造化された記録を意味する。
      - 帳簿が必要な理由は、異なるタイミングで実行される業務を結びつけること。
          - 例えば、カウンター越しに酒と代金を交換すれば、取引が完結するから帳簿は不要である。
          - 一方、店を出るときに支払う形式であれば、回収すべき代金はいくらなのかという伝票（＝帳簿）が必要である。
      - レストランの帳簿ならテーブル番号、品目、数量、デリバリー済みチェック欄を設けるだろう。これが**記録の構造化**。
      - 帳簿は、基幹系システムにおいて、処理より重要である。
      - どの順番で注文に対応するかという「ビジネスルール」は多少いい加減でも業務は回るが、受注残の帳簿がなければ誰に何を提供すればいいのかわからない。

** 1.2 データモデリングはなぜ必要か
   データモデリングとは帳簿をデザインすること
   **既存の帳簿を引き写すのではなく、新たな帳簿をデザインする**
   帳簿がすでに存在していて、そのデータモデルを作る場合、**データモデリングは分析と記述の問題**になる。
   多くの場合、変化に適応するために帳簿デザインの見直しも必要となる。
   既存の実相をもとにデータ項目を整理することに時間を費やすのでは既存の帳簿のコピーになりがちである。
   そのため、今後の事業活動のために帳簿をどのように仕組むかという工夫、帳簿デザインに注意を向けることが重要。

** 1.3 ERPはデータモデリングの重要性を減じるものではない
   現時点では、従来型ビジネスの基幹系システムは**ERP**(Enterprise Resource Planning, 企業資源計画)をもとに構築される場合も多い。
   データモデルは帳簿構造を理解し、業務と適合させるために必要である。
   スクラッチとはライブラリを使用せず、０からオリジナルで開発する手法。

** 1.4 既存の基幹系システムを解体し、新たな基幹系システムを構築する
   モノリシックとは、ソフトウェア設計の際、すべて同じモジュールで作り上げること、対義語は「マイクロ」。

* 2. 基幹系システムの構造
** 2.1 機関系システムのハイレベル構造はどのようなものか
   企業の活動を指示、制御するためには現場に直接向き合うこうした仕事だけで十分というわけではない。
   ではどのように区画されるのか。
   改めて、企業の活動を指示、制御するためには「指図」「引き当て」「消し込み」などに加えて、どのような仕事が必要だろうか。
   それは、長めのタイムレンジで、活動を計画し、調整することが必要である。
   なので、SoRの下位区分として、「活動のシステム」SoA(System of Activities)、「経営管理のシステム」SoM(Systems of Management)と呼ぶとわかりやすい。
   (SoA、SoMは本書固有の言葉)
   よって、SoR = SoA + SoM。
   この切り分けは、現状のシステム区分とずれている。
   **SoAとSoMでは、情報処理の性格が異なる**
   今日主流のリレーショナル・データベースはSoAにおけるデータ処理を主に念頭においている。
